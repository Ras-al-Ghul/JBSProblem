<instance>
	<presentation name="ExampleProblem" maxConstraintArity="4" maximize="false" format="XCSP 2.1_FRODO" />

	<agents nbAgents="7">
		<agent name="agent3" />
		<agent name="agent5" />
		<agent name="agent6" />
		<agent name="agent8" />
		<agent name="agent10" />
		<agent name="agent12" />
		<agent name="agent13" />
	</agents>

	<domains nbDomains="2">
		<domain name="subject" nbValues="5">2 4 7 9 11</domain>
		<domain name="color" nbValues="7">1 2 3 4 5 6 7</domain>
	</domains>

	<variables nbVariables="14">
		<variable name="agent3sub" domain="subject" agent="agent3" />
		<variable name="agent3col" domain="color" agent="agent3" />
		<variable name="agent5sub" domain="subject" agent="agent5" />
		<variable name="agent5col" domain="color" agent="agent5" />
		<variable name="agent6sub" domain="subject" agent="agent6" />
		<variable name="agent6col" domain="color" agent="agent6" />
		<variable name="agent8sub" domain="subject" agent="agent8" />
		<variable name="agent8col" domain="color" agent="agent8" />
		<variable name="agent10sub" domain="subject" agent="agent10" />
		<variable name="agent10col" domain="color" agent="agent10" />
		<variable name="agent12sub" domain="subject" agent="agent12" />
		<variable name="agent12col" domain="color" agent="agent12" />
		<variable name="agent13sub" domain="subject" agent="agent13" />
		<variable name="agent13col" domain="color" agent="agent13" />
	</variables>

	<relations nbRelations="7">
		<relation name="agent3subassn" arity="1" nbTuples="2" semantics="soft" defaultCost="infinity">
			0: 2 | 4
		</relation>
		<relation name="agent5subassn" arity="1" nbTuples="2" semantics="soft" defaultCost="infinity">
			0: 4 | 7
		</relation>
		<relation name="agent6subassn" arity="1" nbTuples="2" semantics="soft" defaultCost="infinity">
			0: 4 | 7
		</relation>
		<relation name="agent8subassn" arity="1" nbTuples="2" semantics="soft" defaultCost="infinity">
			0: 7 | 9
		</relation>
		<relation name="agent10subassn" arity="1" nbTuples="2" semantics="soft" defaultCost="infinity">
			0: 9 | 11
		</relation>
		<relation name="agent12subassn" arity="1" nbTuples="1" semantics="soft" defaultCost="infinity">
			0: 11
		</relation>
		<relation name="agent13subassn" arity="1" nbTuples="1" semantics="soft" defaultCost="infinity">
			0: 11
		</relation>
	</relations>

	<predicates nbPredicates="3">
		<predicate name="NEQ">
			<parameters> int X1 int X2 int Y1 int Y2 </parameters>
			<expression>
				<functional> if( eq(Y1, Y2) , if( eq(X1, X2), 1000, 0 ) , 0 ) </functional>
			</expression>
		</predicate>
		<predicate name="ISCOLLIDE">
			<parameters> int X1 int X2 int Y1 int Y2 int Z1 int Z2 </parameters>
			<expression>
				<functional> if( eq(X1, X2) , if( and(eq(Y1, Z1), eq(Y2, Z2)) , 20000, 0 ) , 0 ) </functional>
			</expression>
		</predicate>
		<predicate name="COST">
			<parameters> int X1 int X2 </parameters>
			<expression>
				<functional> add( X1, X2 ) </functional>
			</expression>
		</predicate>
	</predicates>

	<constraints nbConstraints="36">
		<!-- sub Assignment constraints --> 
		<constraint name="SUB_assignment_for_agent3" arity="1" scope="agent3sub" reference="agent3subassn" />
		<constraint name="SUB_assignment_for_agent5" arity="1" scope="agent5sub" reference="agent5subassn" />
		<constraint name="SUB_assignment_for_agent6" arity="1" scope="agent6sub" reference="agent6subassn" />
		<constraint name="SUB_assignment_for_agent8" arity="1" scope="agent8sub" reference="agent8subassn" />
		<constraint name="SUB_assignment_for_agent10" arity="1" scope="agent10sub" reference="agent10subassn" />
		<constraint name="SUB_assignment_for_agent12" arity="1" scope="agent12sub" reference="agent12subassn" />
		<constraint name="SUB_assignment_for_agent13" arity="1" scope="agent13sub" reference="agent13subassn" />
		<!-- Cost of each relation -->
		<constraint name="agent3_and_agent5_cost" arity="2" scope="agent3col agent5col" reference="COST" >
			<parameters> agent3col agent5col </parameters>
		</constraint>
		<constraint name="agent3_and_agent6_cost" arity="2" scope="agent3col agent6col" reference="COST" >
			<parameters> agent3col agent6col </parameters>
		</constraint>
		<constraint name="agent5_and_agent6_cost" arity="2" scope="agent5col agent6col" reference="COST" >
			<parameters> agent5col agent6col </parameters>
		</constraint>
		<constraint name="agent5_and_agent8_cost" arity="2" scope="agent5col agent8col" reference="COST" >
			<parameters> agent5col agent8col </parameters>
		</constraint>
		<constraint name="agent6_and_agent8_cost" arity="2" scope="agent6col agent8col" reference="COST" >
			<parameters> agent6col agent8col </parameters>
		</constraint>
		<constraint name="agent8_and_agent10_cost" arity="2" scope="agent8col agent10col" reference="COST" >
			<parameters> agent8col agent10col </parameters>
		</constraint>
		<constraint name="agent10_and_agent12_cost" arity="2" scope="agent10col agent12col" reference="COST" >
			<parameters> agent10col agent12col </parameters>
		</constraint>
		<constraint name="agent10_and_agent13_cost" arity="2" scope="agent10col agent13col" reference="COST" >
			<parameters> agent10col agent13col </parameters>
		</constraint>
		<constraint name="agent12_and_agent13_cost" arity="2" scope="agent12col agent13col" reference="COST" >
			<parameters> agent12col agent13col </parameters>
		</constraint>
		<!-- If same color, then can't have same sub -->
		<constraint name="agent3_and_agent5_have_different_sub_if_same_color" arity="4" scope="agent3sub agent5sub agent3col agent5col" reference="NEQ" >
			<parameters> agent3sub agent5sub agent3col agent5col </parameters>
		</constraint>
		<constraint name="agent3_and_agent6_have_different_sub_if_same_color" arity="4" scope="agent3sub agent6sub agent3col agent6col" reference="NEQ" >
			<parameters> agent3sub agent6sub agent3col agent6col </parameters>
		</constraint>
		<constraint name="agent5_and_agent6_have_different_sub_if_same_color" arity="4" scope="agent5sub agent6sub agent5col agent6col" reference="NEQ" >
			<parameters> agent5sub agent6sub agent5col agent6col </parameters>
		</constraint>
		<constraint name="agent5_and_agent8_have_different_sub_if_same_color" arity="4" scope="agent5sub agent8sub agent5col agent8col" reference="NEQ" >
			<parameters> agent5sub agent8sub agent5col agent8col </parameters>
		</constraint>
		<constraint name="agent6_and_agent8_have_different_sub_if_same_color" arity="4" scope="agent6sub agent8sub agent6col agent8col" reference="NEQ" >
			<parameters> agent6sub agent8sub agent6col agent8col </parameters>
		</constraint>
		<constraint name="agent8_and_agent10_have_different_sub_if_same_color" arity="4" scope="agent8sub agent10sub agent8col agent10col" reference="NEQ" >
			<parameters> agent8sub agent10sub agent8col agent10col </parameters>
		</constraint>
		<constraint name="agent10_and_agent12_have_different_sub_if_same_color" arity="4" scope="agent10sub agent12sub agent10col agent12col" reference="NEQ" >
			<parameters> agent10sub agent12sub agent10col agent12col </parameters>
		</constraint>
		<constraint name="agent10_and_agent13_have_different_sub_if_same_color" arity="4" scope="agent10sub agent13sub agent10col agent13col" reference="NEQ" >
			<parameters> agent10sub agent13sub agent10col agent13col </parameters>
		</constraint>
		<constraint name="agent12_and_agent13_have_different_sub_if_same_color" arity="4" scope="agent12sub agent13sub agent12col agent13col" reference="NEQ" >
			<parameters> agent12sub agent13sub agent12col agent13col </parameters>
		</constraint>
		<!-- IsCollide -->
		<constraint name="agent3_and_agent5_don't_collide" arity="4" scope="agent3col agent5col agent3sub agent5sub" reference="ISCOLLIDE" >
			<parameters> agent3col agent5col agent3sub agent5sub 2 4 </parameters>  
		</constraint>
		<constraint name="agent3_and_agent6_don't_collide" arity="4" scope="agent3col agent6col agent3sub agent6sub" reference="ISCOLLIDE" >
			<parameters> agent3col agent6col agent3sub agent6sub 2 4 </parameters>  
		</constraint>
		<constraint name="agent3_and_agent5_don't_collide" arity="4" scope="agent3col agent5col agent3sub agent5sub" reference="ISCOLLIDE" >
			<parameters> agent3col agent5col agent3sub agent5sub 4 7 </parameters>  
		</constraint>
		<constraint name="agent6_and_agent8_don't_collide" arity="4" scope="agent6col agent8col agent6sub agent8sub" reference="ISCOLLIDE" >
			<parameters> agent6col agent8col agent6sub agent8sub 4 7 </parameters>  
		</constraint>
		<constraint name="agent5_and_agent6_don't_collide" arity="4" scope="agent5col agent6col agent5sub agent6sub" reference="ISCOLLIDE" >
			<parameters> agent5col agent6col agent5sub agent6sub 7 4 </parameters>  
		</constraint>
		<constraint name="agent5_and_agent8_don't_collide" arity="4" scope="agent5col agent8col agent5sub agent8sub" reference="ISCOLLIDE" >
			<parameters> agent5col agent8col agent5sub agent8sub 7 9 </parameters>  
		</constraint>
		<constraint name="agent6_and_agent8_don't_collide" arity="4" scope="agent6col agent8col agent6sub agent8sub" reference="ISCOLLIDE" >
			<parameters> agent6col agent8col agent6sub agent8sub 7 9 </parameters>  
		</constraint>
		<constraint name="agent8_and_agent10_don't_collide" arity="4" scope="agent8col agent10col agent8sub agent10sub" reference="ISCOLLIDE" >
			<parameters> agent8col agent10col agent8sub agent10sub 7 9 </parameters>  
		</constraint>
		<constraint name="agent8_and_agent10_don't_collide" arity="4" scope="agent8col agent10col agent8sub agent10sub" reference="ISCOLLIDE" >
			<parameters> agent8col agent10col agent8sub agent10sub 9 11 </parameters>  
		</constraint>
		<constraint name="agent10_and_agent12_don't_collide" arity="4" scope="agent10col agent12col agent10sub agent12sub" reference="ISCOLLIDE" >
			<parameters> agent10col agent12col agent10sub agent12sub 9 11 </parameters>  
		</constraint>
		<constraint name="agent10_and_agent13_don't_collide" arity="4" scope="agent10col agent13col agent10sub agent13sub" reference="ISCOLLIDE" >
			<parameters> agent10col agent13col agent10sub agent13sub 9 11 </parameters>  
		</constraint>
	</constraints>

</instance>
